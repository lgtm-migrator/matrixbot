apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  {{ if or (eq .Values.sqliteDB.enabled true) (eq .Values.sqliteDB.enabled true) }}
  replicas: 1
  {{ else }}
  replicas: {{ .Values.replicas }}
  {{ end }}
  revisionHistoryLimit: 3
  strategy:
    {{ if or (eq .Values.sqliteDB.enabled true) (eq .Values.sqliteDB.enabled true) }}
    type: Recreate
    {{ else }}
    type: RollingUpdate
    {{ end }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.repo }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: {{ .Values.port }}
        readinessProbe:
          httpGet:
            path: /stats
            port: {{ .Values.port }}
          initialDelaySeconds: 30
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /stats
            port: {{ .Values.port }}
          initialDelaySeconds: 30
          timeoutSeconds: 30
        {{ if ne .Values.environment "ci" }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{ end }}
        volumeMounts:
        - name: config
          mountPath: /etc/opsdroid  
        {{ if eq .Values.sqliteDB.enabled true }}  
        - name: db
          mountPath: {{ dir .Values.sqliteDB.path }}
        {{ end }}  
        {{ if eq .Values.encryption.enabled true }}
        - name: store
          mountPath: {{ .Values.encryption.store_path }}  
        {{ end }}   
      volumes:
      - name: config
        configMap:
          name: {{ .Release.Name }} 
      {{ if eq .Values.sqliteDB.enabled true }}            
      - name: db
        {{ if and (ne .Values.environment "ci") (ne .Values.environment "local") }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-db
        {{ else }}
        emptyDir: {}  
        {{ end }}
      {{ end }}    
      {{ if eq .Values.encryption.enabled true }}    
      - name: store
        {{ if and (ne .Values.environment "ci") (ne .Values.environment "local") }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-store
        {{ else }}
        emptyDir: {}  
        {{ end }} 
      {{ end }}    